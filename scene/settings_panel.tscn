[gd_scene load_steps=25 format=3 uid="uid://tbtbxawnm2ne"]

[ext_resource type="Script" uid="uid://d2b5ptfhbycqv" path="res://script/settings_panel.gd" id="1_likc5"]
[ext_resource type="Theme" uid="uid://djxl4in888xtu" path="res://resource/themes/settings_panel.tres" id="1_rb3pu"]
[ext_resource type="FontFile" uid="uid://buafm3mljga3p" path="res://resource/fonts/CourierPrime-Regular.ttf" id="3_fjya3"]
[ext_resource type="FontFile" uid="uid://cidjl7sciail7" path="res://resource/fonts/IBMPlexMono-Regular.ttf" id="4_upj7t"]
[ext_resource type="FontFile" uid="uid://dubsuc0k345rq" path="res://resource/fonts/Inconsolata-Regular.ttf" id="5_2xvam"]
[ext_resource type="FontFile" uid="uid://dayt5pkn3kjjq" path="res://resource/fonts/RobotoMono-Regular.ttf" id="6_jyo05"]
[ext_resource type="FontFile" uid="uid://rw15vimc2axs" path="res://resource/fonts/SourceCodePro-Regular.ttf" id="7_k4fqs"]
[ext_resource type="FontFile" uid="uid://dqnkpa8cuoij6" path="res://resource/fonts/CascadiaCode-Regular.ttf" id="8_vlppf"]
[ext_resource type="FontFile" uid="uid://5n1x7hxpbmuy" path="res://resource/fonts/JetBrainsMono-Regular.ttf" id="9_wr3al"]
[ext_resource type="FontFile" uid="uid://c54h076o7fnyy" path="res://resource/fonts/Lato-Regular.ttf" id="10_iwgq4"]
[ext_resource type="FontFile" uid="uid://byjypdf3bacy3" path="res://resource/fonts/LibertinusMono-Regular.ttf" id="11_0bj2m"]
[ext_resource type="FontFile" uid="uid://d33m5s1qshv4p" path="res://resource/fonts/Ubuntu-Regular.ttf" id="12_t382g"]

[sub_resource type="GDScript" id="GDScript_wr3al"]
resource_name = "tab_contents"
script/source = "extends VBoxContainer

func _enter_tree() -> void:
	for child in get_children():
		if !child.name.match(&\"ButtonTabs\"):
			owner.tab_contents.append(child)
"

[sub_resource type="GDScript" id="GDScript_vlppf"]
resource_name = "button_tabs"
script/source = "extends HBoxContainer

func _enter_tree() -> void:
	var buttons : Array[Button]
	
	for button in get_children():
		buttons.append(button)
	owner.tab_buttons = buttons
	
	for button in buttons:
		button.toggled.connect(Callable.create(self, \"_on_toggled\").bind(button))

func _on_toggled(toggled_on: bool, emitting_button: Button) -> void:
	if toggled_on:
		for i in owner.tab_buttons.size():
			var tab_button: Button = owner.tab_buttons[i]
			var tab_content: MarginContainer = owner.tab_contents[i]
			
			if tab_button.button_pressed and tab_button != emitting_button:
				tab_button.button_pressed = false
			
			tab_content.visible = tab_button.button_pressed
			update_outline(tab_button.button_pressed, tab_button)

func update_outline(enabled: bool, button: Button) -> void:
	if enabled:
		return button.add_theme_constant_override(&\"outline_size\", 20)
	button.remove_theme_constant_override(&\"outline_size\")
"

[sub_resource type="GDScript" id="GDScript_iwgq4"]
resource_name = "window_mode"
script/source = "extends OptionButton

func _enter_tree() -> void: owner.window_mode = self

func _on_item_selected(_index: int) -> void: 
	var id := get_selected_id()
	
	if DisplayServer.window_get_mode() != id:
		DisplayServer.window_set_mode(id)
		
		for button in owner.resizable_buttons:
			button.disabled = id == 3
"

[sub_resource type="GDScript" id="GDScript_0bj2m"]
resource_name = "resizable"
script/source = "extends HBoxContainer

func _enter_tree() -> void:
	var children : = get_children()
	var buttons: Array[Button] = [children[1], children[2]]
	
	owner.resizable_buttons = buttons
	
	for button in buttons:
		button.toggled.connect(Callable.create(self, \"_on_toggled\").bind(button))

func _on_toggled(toggled_on: bool, emitting_button: Button) -> void:
	if toggled_on:
		for button in owner.resizable_buttons:
			if button.button_pressed and button != emitting_button:
				button.button_pressed = false
		
		if emitting_button.name.match(&\"Yes\"):
			get_viewport().get_window().unresizable = false
		else:
			get_viewport().get_window().unresizable = true
"

[sub_resource type="GDScript" id="GDScript_t382g"]
resource_name = "quick_restart_button"
script/source = "extends VBoxContainer

func _enter_tree() -> void:
	var buttons : Array[Button]
	
	for child in $HBoxContainer.get_children():
		if !child.name.match(&\"Label\"):
			buttons.append(child)
	owner.quick_restart_buttons = buttons
	
	for button in buttons:
		button.toggled.connect(Callable.create(self, &\"_on_toggled\").bind(button))

func _on_toggled(toggled_on: bool, emitting_button: Button) -> void:
	if toggled_on:
		for button in owner.quick_restart_buttons:
			if button.button_pressed and button != emitting_button:
				button.button_pressed = false 
		
		InputManager.restart_key_off = emitting_button.name.match(&\"Off\")
		SettingsManager.current_settings.general.quick_restart_off = InputManager.restart_key_off
		if !InputManager.restart_key_off:
			match emitting_button.name:
				&\"Esc\":
					InputManager.restart_key = InputManager.ESC
				&\"Tab\":
					InputManager.restart_key = InputManager.TAB
				&\"Enter\":
					InputManager.restart_key = InputManager.ENTER
		SettingsManager.current_settings.general.quick_restart = InputManager.restart_key
"

[sub_resource type="GDScript" id="GDScript_xk1fi"]
resource_name = "font_size"
script/source = "extends OptionButton

func _enter_tree() -> void:
	owner.font_size = self
	
	var interval: int = 4
	
	for i in range(30, 82, interval):
		add_item(str(i))

func _on_item_selected(index: int) -> void:
	var interval: int = 4
	
	var current: int = SettingsManager.current_settings.appearance.font_size
	var new: int = 30 + (interval  * index)
	
	if current != new:
		ThemeManager.set_font_size(new)
"

[sub_resource type="GDScript" id="GDScript_urpkm"]
resource_name = "visible_lines"
script/source = "extends OptionButton

func _enter_tree() -> void:
	owner.visible_lines = self
	
	for i in range(1, 7):
		add_item(str(i))

func _on_item_selected(index: int) -> void:
	var current: int = SettingsManager.current_settings.appearance.visible_lines
	var new: int = index + 1
	
	if current != new:
		SettingsManager.current_settings.appearance.visible_lines = new
		ObjectReferences.test_field_panel.queue_redraw()
"

[sub_resource type="GDScript" id="GDScript_2ll5a"]
resource_name = "font"
script/source = "extends VBoxContainer

func _enter_tree() -> void:
	var font_buttons : Array[Button]
	
	# appending every buttons
	for line in get_children():
		for button in line.get_children():
			font_buttons.append(button)
	owner.font_buttons = font_buttons
	
	# connecting every buttons
	for button in font_buttons:
		button.toggled.connect(Callable.create(self, &\"_on_toggled\").bind(button))

func _on_toggled(toggled_on: bool, emitting_button: Button) -> void:
	if toggled_on:
		for button in owner.font_buttons:
			if button.button_pressed and button != emitting_button:
				button.button_pressed = false
		
		var current: Font = SettingsManager.current_settings.appearance.font
		var new: Font = emitting_button.get_theme_font(&\"font\")
		
		if current != new:
			ThemeManager.set_font(new)
"

[sub_resource type="SystemFont" id="SystemFont_uinb1"]
subpixel_positioning = 0

[sub_resource type="StyleBoxEmpty" id="StyleBoxEmpty_vlppf"]

[sub_resource type="GDScript" id="GDScript_skdsi"]
resource_name = "visible_typing_field"
script/source = "extends HBoxContainer

func _enter_tree() -> void:
	var children : = get_children()
	var buttons: Array[Button] = [children[1], children[2]]
	
	owner.typing_field_buttons = buttons
	
	for button in buttons:
		button.toggled.connect(Callable.create(self, \"_on_toggled\").bind(button))

func _on_toggled(toggled_on: bool, emitting_button: Button) -> void:
	if toggled_on:
		for button in owner.typing_field_buttons:
			if button.button_pressed and button != emitting_button:
				button.button_pressed = false
		
		var test_theme: Theme = ObjectReferences.test_field_panel.theme
		var styles: Array[StringName] = [&\"normal\", &\"focus\"]
		
		if !emitting_button.name.match(&\"Yes\"):
			for style in styles:
				test_theme.set_stylebox(style, &\"LineEdit\", StyleBoxEmpty.new())
		else:
			for style in styles:
				if test_theme.get_stylebox(style, &\"LineEdit\") != null:
					test_theme.clear_stylebox(style, &\"LineEdit\")
		
		SettingsManager.current_settings.appearance.visible_typing_field = emitting_button.name.match(&\"Yes\")
"

[sub_resource type="GDScript" id="GDScript_srv4f"]
resource_name = "siel"
script/source = "extends Button

func _on_toggled(toggled_on: bool) -> void:
	if toggled_on:
		var colors: Dictionary = {
			\"name\" : name,
			\"background\" : Color.BLACK,
			\"main_text\" : Color.WHITE,
			\"outline_selection\" : Color.DIM_GRAY,
			\"typed_correct\" : &\"dimgray\",
			\"typed_error\" : &\"peru\",
			\"submit_correct\" : &\"gray\",
			\"submit_error\" : &\"dimgray\",
		}
		
		ThemeManager.set_color_scheme(colors)
"

[node name="SettingsPanel" type="MarginContainer"]
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
theme = ExtResource("1_rb3pu")
theme_override_constants/margin_left = 400
theme_override_constants/margin_top = 25
theme_override_constants/margin_right = 400
theme_override_constants/margin_bottom = 25
script = ExtResource("1_likc5")

[node name="TabContents" type="VBoxContainer" parent="."]
layout_mode = 2
script = SubResource("GDScript_wr3al")

[node name="ButtonTabs" type="HBoxContainer" parent="TabContents"]
layout_mode = 2
script = SubResource("GDScript_vlppf")

[node name="General" type="Button" parent="TabContents/ButtonTabs"]
layout_mode = 2
size_flags_horizontal = 3
theme_type_variation = &"ButtonTab"
toggle_mode = true
action_mode = 0
text = "general"

[node name="Appearance" type="Button" parent="TabContents/ButtonTabs"]
layout_mode = 2
size_flags_horizontal = 3
theme_type_variation = &"ButtonTab"
toggle_mode = true
action_mode = 0
text = "appearance
"

[node name="ColorScheme" type="Button" parent="TabContents/ButtonTabs"]
layout_mode = 2
size_flags_horizontal = 3
theme_type_variation = &"ButtonTab"
toggle_mode = true
action_mode = 0
text = "color scheme"

[node name="General" type="MarginContainer" parent="TabContents"]
visible = false
layout_mode = 2
size_flags_vertical = 0

[node name="VBoxContainer" type="VBoxContainer" parent="TabContents/General"]
layout_mode = 2
theme_override_constants/separation = 10

[node name="WindowMode" type="HBoxContainer" parent="TabContents/General/VBoxContainer"]
layout_mode = 2

[node name="Label" type="Label" parent="TabContents/General/VBoxContainer/WindowMode"]
layout_mode = 2
size_flags_horizontal = 3
theme_type_variation = &"HeaderMedium"
text = "window mode"

[node name="OptionButton" type="OptionButton" parent="TabContents/General/VBoxContainer/WindowMode"]
layout_mode = 2
size_flags_horizontal = 3
action_mode = 1
alignment = 1
selected = 2
allow_reselect = true
item_count = 3
popup/item_0/text = "windowed"
popup/item_0/id = 0
popup/item_1/text = "maximized"
popup/item_1/id = 2
popup/item_2/text = "fullscreen"
popup/item_2/id = 3
script = SubResource("GDScript_iwgq4")

[node name="WindowResizable" type="HBoxContainer" parent="TabContents/General/VBoxContainer"]
layout_mode = 2
script = SubResource("GDScript_0bj2m")

[node name="Label" type="Label" parent="TabContents/General/VBoxContainer/WindowResizable"]
layout_mode = 2
size_flags_horizontal = 3
size_flags_stretch_ratio = 2.02
theme_type_variation = &"HeaderMedium"
text = "window resizable"

[node name="Yes" type="Button" parent="TabContents/General/VBoxContainer/WindowResizable"]
layout_mode = 2
size_flags_horizontal = 3
toggle_mode = true
action_mode = 0
text = "yes"

[node name="No" type="Button" parent="TabContents/General/VBoxContainer/WindowResizable"]
layout_mode = 2
size_flags_horizontal = 3
toggle_mode = true
action_mode = 0
text = "no"

[node name="RestartTest" type="VBoxContainer" parent="TabContents/General/VBoxContainer"]
layout_mode = 2
script = SubResource("GDScript_t382g")

[node name="HBoxContainer" type="HBoxContainer" parent="TabContents/General/VBoxContainer/RestartTest"]
layout_mode = 2
theme_override_constants/separation = 10

[node name="Label" type="Label" parent="TabContents/General/VBoxContainer/RestartTest/HBoxContainer"]
layout_mode = 2
size_flags_horizontal = 3
size_flags_stretch_ratio = 4.2
theme_type_variation = &"HeaderMedium"
text = "quick restart"

[node name="Off" type="Button" parent="TabContents/General/VBoxContainer/RestartTest/HBoxContainer"]
layout_mode = 2
size_flags_horizontal = 3
toggle_mode = true
action_mode = 0
text = "off"

[node name="Esc" type="Button" parent="TabContents/General/VBoxContainer/RestartTest/HBoxContainer"]
layout_mode = 2
size_flags_horizontal = 3
toggle_mode = true
action_mode = 0
text = "esc"

[node name="Tab" type="Button" parent="TabContents/General/VBoxContainer/RestartTest/HBoxContainer"]
layout_mode = 2
size_flags_horizontal = 3
toggle_mode = true
action_mode = 0
text = "tab"

[node name="Enter" type="Button" parent="TabContents/General/VBoxContainer/RestartTest/HBoxContainer"]
layout_mode = 2
size_flags_horizontal = 3
toggle_mode = true
action_mode = 0
text = "enter"

[node name="Appearance" type="MarginContainer" parent="TabContents"]
layout_mode = 2
size_flags_horizontal = 3
size_flags_vertical = 0

[node name="VBoxContainer" type="VBoxContainer" parent="TabContents/Appearance"]
layout_mode = 2

[node name="TextFieldHeader" type="HBoxContainer" parent="TabContents/Appearance/VBoxContainer"]
layout_mode = 2

[node name="HSeparator" type="HSeparator" parent="TabContents/Appearance/VBoxContainer/TextFieldHeader"]
layout_mode = 2
size_flags_horizontal = 3

[node name="Label" type="Label" parent="TabContents/Appearance/VBoxContainer/TextFieldHeader"]
layout_mode = 2
size_flags_horizontal = 4
theme_type_variation = &"HeaderLarge"
text = " text field "
horizontal_alignment = 1
vertical_alignment = 1

[node name="HSeparator2" type="HSeparator" parent="TabContents/Appearance/VBoxContainer/TextFieldHeader"]
layout_mode = 2
size_flags_horizontal = 3

[node name="FontSize" type="HBoxContainer" parent="TabContents/Appearance/VBoxContainer"]
layout_mode = 2

[node name="Label" type="Label" parent="TabContents/Appearance/VBoxContainer/FontSize"]
layout_mode = 2
size_flags_horizontal = 3
theme_type_variation = &"HeaderMedium"
text = "font size"

[node name="OptionButton" type="OptionButton" parent="TabContents/Appearance/VBoxContainer/FontSize"]
layout_mode = 2
size_flags_horizontal = 3
allow_reselect = true
script = SubResource("GDScript_xk1fi")

[node name="VisibleLines" type="HBoxContainer" parent="TabContents/Appearance/VBoxContainer"]
layout_mode = 2

[node name="Label" type="Label" parent="TabContents/Appearance/VBoxContainer/VisibleLines"]
layout_mode = 2
size_flags_horizontal = 3
theme_type_variation = &"HeaderMedium"
text = "visible lines"

[node name="OptionButton" type="OptionButton" parent="TabContents/Appearance/VBoxContainer/VisibleLines"]
layout_mode = 2
size_flags_horizontal = 3
allow_reselect = true
script = SubResource("GDScript_urpkm")

[node name="Font" type="VBoxContainer" parent="TabContents/Appearance/VBoxContainer"]
layout_mode = 2
script = SubResource("GDScript_2ll5a")

[node name="Label" type="Label" parent="TabContents/Appearance/VBoxContainer/Font"]
layout_mode = 2
size_flags_horizontal = 3
theme_type_variation = &"HeaderMedium"
text = "font"

[node name="Line1" type="HBoxContainer" parent="TabContents/Appearance/VBoxContainer/Font"]
layout_mode = 2

[node name="Default" type="Button" parent="TabContents/Appearance/VBoxContainer/Font/Line1"]
layout_mode = 2
size_flags_horizontal = 3
theme_override_fonts/font = SubResource("SystemFont_uinb1")
toggle_mode = true
action_mode = 0
text = "default"

[node name="CourierPrime" type="Button" parent="TabContents/Appearance/VBoxContainer/Font/Line1"]
layout_mode = 2
size_flags_horizontal = 3
theme_override_fonts/font = ExtResource("3_fjya3")
toggle_mode = true
action_mode = 0
text = "Courier Prime"

[node name="IBMPlexMono" type="Button" parent="TabContents/Appearance/VBoxContainer/Font/Line1"]
layout_mode = 2
size_flags_horizontal = 3
theme_override_fonts/font = ExtResource("4_upj7t")
toggle_mode = true
action_mode = 0
text = "IBM Plex Mono"

[node name="Line2" type="HBoxContainer" parent="TabContents/Appearance/VBoxContainer/Font"]
layout_mode = 2

[node name="Inconsolata" type="Button" parent="TabContents/Appearance/VBoxContainer/Font/Line2"]
layout_mode = 2
size_flags_horizontal = 3
theme_override_fonts/font = ExtResource("5_2xvam")
toggle_mode = true
action_mode = 0
text = "Inconsolata"

[node name="RobotoMono" type="Button" parent="TabContents/Appearance/VBoxContainer/Font/Line2"]
layout_mode = 2
size_flags_horizontal = 3
theme_override_fonts/font = ExtResource("6_jyo05")
toggle_mode = true
action_mode = 0
text = "Roboto Mono"

[node name="SourceCodePro" type="Button" parent="TabContents/Appearance/VBoxContainer/Font/Line2"]
layout_mode = 2
size_flags_horizontal = 3
theme_override_fonts/font = ExtResource("7_k4fqs")
toggle_mode = true
action_mode = 0
text = "Source Code Pro"

[node name="Line3" type="HBoxContainer" parent="TabContents/Appearance/VBoxContainer/Font"]
layout_mode = 2

[node name="CascadiaCode" type="Button" parent="TabContents/Appearance/VBoxContainer/Font/Line3"]
layout_mode = 2
size_flags_horizontal = 3
theme_override_fonts/font = ExtResource("8_vlppf")
toggle_mode = true
action_mode = 0
text = "Cascadia Code"

[node name="JetBrainsMono" type="Button" parent="TabContents/Appearance/VBoxContainer/Font/Line3"]
layout_mode = 2
size_flags_horizontal = 3
theme_override_fonts/font = ExtResource("9_wr3al")
toggle_mode = true
action_mode = 0
text = "JetBrains Mono"

[node name="Lato" type="Button" parent="TabContents/Appearance/VBoxContainer/Font/Line3"]
layout_mode = 2
size_flags_horizontal = 3
theme_override_fonts/font = ExtResource("10_iwgq4")
toggle_mode = true
action_mode = 0
text = "Lato"

[node name="Line4" type="HBoxContainer" parent="TabContents/Appearance/VBoxContainer/Font"]
layout_mode = 2

[node name="LibertinusMono" type="Button" parent="TabContents/Appearance/VBoxContainer/Font/Line4"]
layout_mode = 2
size_flags_horizontal = 3
theme_override_fonts/font = ExtResource("11_0bj2m")
toggle_mode = true
action_mode = 0
text = "Libertinus Mono"

[node name="Ubuntu" type="Button" parent="TabContents/Appearance/VBoxContainer/Font/Line4"]
layout_mode = 2
size_flags_horizontal = 3
theme_override_fonts/font = ExtResource("12_t382g")
toggle_mode = true
action_mode = 0
text = "Ubuntu"

[node name="HSeparator" type="HSeparator" parent="TabContents/Appearance/VBoxContainer"]
layout_mode = 2
theme_override_constants/separation = 10
theme_override_styles/separator = SubResource("StyleBoxEmpty_vlppf")

[node name="TypingFieldHeader" type="HBoxContainer" parent="TabContents/Appearance/VBoxContainer"]
layout_mode = 2

[node name="HSeparator" type="HSeparator" parent="TabContents/Appearance/VBoxContainer/TypingFieldHeader"]
layout_mode = 2
size_flags_horizontal = 3

[node name="Label" type="Label" parent="TabContents/Appearance/VBoxContainer/TypingFieldHeader"]
layout_mode = 2
size_flags_horizontal = 4
theme_type_variation = &"HeaderLarge"
text = " typing field "
horizontal_alignment = 1
vertical_alignment = 1

[node name="HSeparator2" type="HSeparator" parent="TabContents/Appearance/VBoxContainer/TypingFieldHeader"]
layout_mode = 2
size_flags_horizontal = 3

[node name="VisibleTypingField" type="HBoxContainer" parent="TabContents/Appearance/VBoxContainer"]
layout_mode = 2
script = SubResource("GDScript_skdsi")

[node name="Label" type="Label" parent="TabContents/Appearance/VBoxContainer/VisibleTypingField"]
layout_mode = 2
size_flags_horizontal = 3
size_flags_stretch_ratio = 2.01
theme_type_variation = &"HeaderMedium"
text = "visible typing field"

[node name="Yes" type="Button" parent="TabContents/Appearance/VBoxContainer/VisibleTypingField"]
layout_mode = 2
size_flags_horizontal = 3
toggle_mode = true
action_mode = 0
text = "yes"

[node name="No" type="Button" parent="TabContents/Appearance/VBoxContainer/VisibleTypingField"]
layout_mode = 2
size_flags_horizontal = 3
toggle_mode = true
action_mode = 0
text = "no"

[node name="ColorScheme" type="MarginContainer" parent="TabContents"]
visible = false
layout_mode = 2
size_flags_horizontal = 3
size_flags_vertical = 3

[node name="VBoxContainer" type="VBoxContainer" parent="TabContents/ColorScheme"]
layout_mode = 2

[node name="HBoxContainer" type="HBoxContainer" parent="TabContents/ColorScheme/VBoxContainer"]
layout_mode = 2

[node name="default" type="Button" parent="TabContents/ColorScheme/VBoxContainer/HBoxContainer"]
layout_mode = 2
size_flags_horizontal = 3
toggle_mode = true
action_mode = 0
text = "default"

[node name="siel" type="Button" parent="TabContents/ColorScheme/VBoxContainer/HBoxContainer"]
layout_mode = 2
size_flags_horizontal = 3
toggle_mode = true
action_mode = 0
text = "siel"
script = SubResource("GDScript_srv4f")

[connection signal="item_selected" from="TabContents/General/VBoxContainer/WindowMode/OptionButton" to="TabContents/General/VBoxContainer/WindowMode/OptionButton" method="_on_item_selected"]
[connection signal="item_selected" from="TabContents/Appearance/VBoxContainer/FontSize/OptionButton" to="TabContents/Appearance/VBoxContainer/FontSize/OptionButton" method="_on_item_selected"]
[connection signal="item_selected" from="TabContents/Appearance/VBoxContainer/VisibleLines/OptionButton" to="TabContents/Appearance/VBoxContainer/VisibleLines/OptionButton" method="_on_item_selected"]
[connection signal="toggled" from="TabContents/ColorScheme/VBoxContainer/HBoxContainer/default" to="TabContents/ColorScheme/VBoxContainer/HBoxContainer/default" method="_on_toggled"]
[connection signal="toggled" from="TabContents/ColorScheme/VBoxContainer/HBoxContainer/siel" to="TabContents/ColorScheme/VBoxContainer/HBoxContainer/siel" method="_on_toggled"]
